[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[project]
name = "your-project"
version = "0.0.1"
description = "Describe Your Cool Project"
authors = [
    {name = "Your Name", email = "you@example.com"}
]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.10,<4.0"
dependencies = [
    # --------- pytorch-ie --------- #
    # TODO: "pytorch-ie (>=0.33.0,<0.34.0)" when released on pypi
    "pytorch-ie @ git+https://github.com/ArneBinder/pytorch-ie@main",
    "pie-datasets (>=0.11.0,<0.12.0)",

    # ------- reprocessing -------- #
    "nltk (>=3.9.1,<4.0.0)",           # sentence splitter (just for drugprot.yaml experiment which dry-runs in slow tests, remove if not needed)

    # --------- hydra --------- #
    "hydra-core (>=1.3.0)",
    "hydra-colorlog (>=1.2.0)",
    "hydra-optuna-sweeper (>=1.2.0)",

    # --------- loggers --------- #
    # "wandb",
    # "neptune-client",
    # "mlflow",
    # "comet-ml",
    # "tensorboard",
    # "aim",

    # --------- linters --------- #
    "pre-commit (>=4.3.0,<5.0.0)",      # hooks for applying linters on commit
    "black (>=25.1.0,<26.0.0)",         # code formatting
    "isort (>=6.0.1,<7.0.0)",           # import sorting
    "flake8 (>=7.3.0,<8.0.0)",          # code analysis
    "nbstripout (>=0.8.1,<0.9.0)",      # remove output from jupyter notebooks

    # --------- others --------- #
    "pyrootutils (>=1.0.4,<2.0.0)",     # standardizing the project root setup
    "python-dotenv (>=1.1.1,<2.0.0)",   # loading env variables from .env file
    "rich (>=14.1.0,<15.0.0)",          # beautiful text formatting in terminal
    "pytest (>=8.4.1,<9.0.0)",          # tests
    "pytest-cov (>=6.2.1,<7.0.0)",      # test coverage
    "pytest-xdist (>=3.8.0,<4.0.0)",    # use more cores for tests
    "sh (>=2.2.2,<3.0.0)",              # for running bash commands in some tests
    "pudb (>=2025.1,<2026.0)",          # debugger
    "tabulate (>=0.9.0,<0.10.0)",       # show statistics as markdown
    "plotext (>=5.3.2,<6.0.0)",         # show statistics as plots
]

[project.urls]
homepage = "https://your-project.com"
repository = "https://github.com/user/project"

[tool.poetry]
# Uncomment this to use Poetry only for dependency management but not for packaging
# package-mode = false
packages = [
    {include = "src"},
]

[tool.isort]
line_length = 99
profile = "black"
filter_files = true

[tool.coverage.paths]
source = ["src"]
tests = ["tests"]

[tool.coverage.run]
branch = true
source = ["src"]

[tool.coverage.report]
show_missing = true
# Uncomment to fail if minimum coverage is not reached
# fail_under = 40
exclude_lines = [
    # Have to re-enable the standard pragma
    "pragma: no cover",

    # Don't complain about missing debug-only code:
    "def __repr__",
    "if self.debug",

    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",

    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if __name__ == .__main__.:",
]

[tool.pytest.ini_options]
testpaths = [
    "tests/",
]
log_cli = true
markers = [
    "slow",
    "veryslow",
]
addopts = [
    "--durations=0",
    "--strict-markers",
    "--doctest-modules",
    "-n=auto"
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::UserWarning",
]
